<?php
/* vim: set expandtab tabstop=4 softtabstop=4 shiftwidth=4: */
// +---------------------------------------------------------------------------+
// | PHP version 5.4.7                                                         |
// +---------------------------------------------------------------------------+
// | Copyright (c) 2006-2014                                                   |
// +---------------------------------------------------------------------------+
// | 08.03.2014 3:32:18 YEKT 2014                                              |
// | Класс - type_description_here                                             |
// +---------------------------------------------------------------------------+
// | Author: Alexander Polyanin <polyanin@gmail.com>                           |
// +---------------------------------------------------------------------------+
//
// $Id$
/**
 * @package Capsule
 */

namespace App\Cms\Controller\Component;
use App\Cms\Controller\ReferenceController;
use App\Cms\Ui\ActionMenu\Url;
use Capsule\Component\Url\Redirect;
use Capsule\Tools\Tools;

/**
 * Named.php
 *
 * @package Capsule
 * @author Alexander Polyanin <polyanin@gmail.com>
 */
class Preferences extends ReferenceController
{
    protected $moduleClass = '\\App\\Cms\\Component\\Preferences';

    protected function listItems(array $param = [])
    {
        parent::listItems(); // TODO: Change the autogenerated stub
        $filter = $this->app->urlFilter;
        $toolbar = $this->app->registry->actionMenu;
        $toolbar->newMenuItem('Load defaults', new Url($filter($this->mod, 'loadDefaults')));
    }

    protected function loadDefaults()
    {
        $c = $this->moduleClass;
        $config = $c::config()->get('defaults');
        $filter = $this->app->urlFilter;
        if (!is_array($config)) {
            Redirect::go($filter($this->mod));
        }
        foreach ($config as $token => $data) {
            if (!is_array($data)) {
                continue;
            }
            if (empty($data)) {
                continue;
            }
            if (sizeof($c::elementsByToken($token))) {
                continue;
            }
            try {
                $o = new $c;
                $o->token = $token;
                foreach ($data as $name => $value) {
                    $o->$name = $value;
                }
                $o->store();
            } catch (\Throwable $exception) {
                continue;
            }
        }
        Redirect::go($filter($this->mod));
    }
}